version: "3.7"
services:

  controlservice:
    image: wirvsvirus17livetracking/controlservice
    container_name: "controlservice"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.controlservice.loadbalancer.server.port=5000"
      - "traefik.http.routers.controlservice.entrypoints=web"
      - "traefik.http.routers.controlservice.rule=Host(`controlservice.localhost`)"
    networks:
      - "this"
  
  inputservice:
    image: wirvsvirus17livetracking/inputservice:dev
    container_name: "inputservice"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.inputservice.loadbalancer.server.port=5000"
      - "traefik.http.routers.inputservice.entrypoints=web"
      - "traefik.http.routers.inputservice.rule=Host(`inputservice.localhost`)"
    networks:
      - "this"

  client:
      image: niewview/supermarket_clientapp
      container_name: "client"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.client.entrypoints=web"
        - "traefik.http.routers.client.rule=Host(`localhost`)"
      networks:
        - "this"


  proxy:
    image: "traefik:v2.1"
    container_name: "proxy"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true" #NOT IN PRODUCTION PLEASE
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" #NOT IN PRODUCTION PLEASE
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - "this"


networks:
    this:
     name: backend
     driver: bridge


